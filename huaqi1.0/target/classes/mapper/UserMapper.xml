<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huaqi.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.huaqi.bean.User">
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="userName" jdbcType="VARCHAR" property="userName" />
    <result column="age" jdbcType="DOUBLE" property="age" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="address" jdbcType="DOUBLE" property="address" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="tel" jdbcType="CHAR" property="tel" />
    <result column="userType" jdbcType="VARCHAR" property="userType" />
    <result column="majorExpenditure" jdbcType="DOUBLE" property="majorExpenditure" />
    <result column="renovatedHouse" jdbcType="DOUBLE" property="renovatedHouse" />
    <result column="houseValue" jdbcType="DOUBLE" property="houseValue" />
    <result column="agriculturalEquip" jdbcType="DOUBLE" property="agriculturalEquip" />
    <result column="vehicleValue" jdbcType="DOUBLE" property="vehicleValue" />
    <result column="fixedAssets" jdbcType="DOUBLE" property="fixedAssets" />
    <result column="agriHypothecaryValue" jdbcType="DOUBLE" property="agriHypothecaryValue" />
    <result column="deposit" jdbcType="DOUBLE" property="deposit" />
    <result column="aveIncome" jdbcType="DOUBLE" property="aveIncome" />
    <result column="monthIncome" jdbcType="DOUBLE" property="monthIncome" />
    <result column="monthRatal" jdbcType="DOUBLE" property="monthRatal" />
    <result column="commerceHypothecaryValue" jdbcType="DOUBLE" property="commerceHypothecaryValue" />
    <result column="liabilities" jdbcType="DOUBLE" property="liabilities" />
    <result column="villageCadres" jdbcType="DOUBLE" property="villageCadres" />
    <result column="guarantee" jdbcType="DOUBLE" property="guarantee" />
    <result column="elderLive" jdbcType="DOUBLE" property="elderLive" />
    <result column="honor" jdbcType="DOUBLE" property="honor" />
    <result column="loanGuaratee" jdbcType="DOUBLE" property="loanGuaratee" />
    <result column="informationLevel" jdbcType="DOUBLE" property="informationLevel" />
    <result column="personalInsurance" jdbcType="DOUBLE" property="personalInsurance" />
    <result column="healthExamination" jdbcType="DOUBLE" property="healthExamination" />
    <result column="interestRate" jdbcType="DOUBLE" property="interestRate" />
    <result column="residenceTime" jdbcType="DOUBLE" property="residenceTime" />
    <result column="maritalStatus" jdbcType="DOUBLE" property="maritalStatus" />
    <result column="married" jdbcType="DOUBLE" property="married" />
    <result column="divorced" jdbcType="DOUBLE" property="divorced" />
    <result column="phoneNumReplace" jdbcType="DOUBLE" property="phoneNumReplace" />
    <result column="fallIll" jdbcType="DOUBLE" property="fallIll" />
    <result column="educationBackground" jdbcType="DOUBLE" property="educationBackground" />
    <result column="mainStemDistance" jdbcType="DOUBLE" property="mainStemDistance" />
    <result column="treatmentCosts" jdbcType="DOUBLE" property="treatmentCosts" />
    <result column="raisingNumber" jdbcType="DOUBLE" property="raisingNumber" />
    <result column="childrenEdu" jdbcType="DOUBLE" property="childrenEdu" />
    <result column="manpowerRate" jdbcType="DOUBLE" property="manpowerRate" />
    <result column="modernAgriTech" jdbcType="DOUBLE" property="modernAgriTech" />
    <result column="propertyInsurance" jdbcType="DOUBLE" property="propertyInsurance" />
    <result column="disasterNumber" jdbcType="DOUBLE" property="disasterNumber" />
    <result column="damageRate" jdbcType="DOUBLE" property="damageRate" />
    <result column="loanUse" jdbcType="DOUBLE" property="loanUse" />
    <result column="newsAttention" jdbcType="DOUBLE" property="newsAttention" />
    <result column="educationAttention" jdbcType="DOUBLE" property="educationAttention" />
    <result column="onlineFrequency" jdbcType="DOUBLE" property="onlineFrequency" />
    <result column="broadbandBandwidth" jdbcType="DOUBLE" property="broadbandBandwidth" />
    <result column="phoneCharge" jdbcType="DOUBLE" property="phoneCharge" />
    <result column="weChat" jdbcType="DOUBLE" property="weChat" />
    <result column="arrearage" jdbcType="DOUBLE" property="arrearage" />
    <result column="badActions" jdbcType="DOUBLE" property="badActions" />
    <result column="layPayment" jdbcType="DOUBLE" property="layPayment" />
    <result column="privateLending" jdbcType="DOUBLE" property="privateLending" />
    <result column="evaluateResult" jdbcType="DOUBLE" property="evaluateResult" />
    <result column="paydebtAbilityScore" jdbcType="DOUBLE" property="paydebtAbilityScore" />
    <result column="paydebtAbilityLevel" jdbcType="VARCHAR" property="paydebtAbilityLevel" />
    <result column="paydebtPotentialScore" jdbcType="DOUBLE" property="paydebtPotentialScore" />
    <result column="paydebtPotentialLevel" jdbcType="VARCHAR" property="paydebtPotentialLevel" />
    <result column="paydebtSystemScore" jdbcType="DOUBLE" property="paydebtSystemScore" />
    <result column="paydebtSystemLevel" jdbcType="VARCHAR" property="paydebtSystemLevel" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, password, userName, age, gender, address, email, tel, userType, majorExpenditure, 
    renovatedHouse, houseValue, agriculturalEquip, vehicleValue, fixedAssets, agriHypothecaryValue, 
    deposit, aveIncome, monthIncome, monthRatal, commerceHypothecaryValue, liabilities, 
    villageCadres, guarantee, elderLive, honor, loanGuaratee, informationLevel, personalInsurance, 
    healthExamination, interestRate, residenceTime, maritalStatus, married, divorced, 
    phoneNumReplace, fallIll, educationBackground, mainStemDistance, treatmentCosts, 
    raisingNumber, childrenEdu, manpowerRate, modernAgriTech, propertyInsurance, disasterNumber, 
    damageRate, loanUse, newsAttention, educationAttention, onlineFrequency, broadbandBandwidth, 
    phoneCharge, weChat, arrearage, badActions, layPayment, privateLending, evaluateResult, 
    paydebtAbilityScore, paydebtAbilityLevel, paydebtPotentialScore, paydebtPotentialLevel, 
    paydebtSystemScore, paydebtSystemLevel
  </sql>
  <select id="selectByExample" parameterType="com.huaqi.bean.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from users
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from users
    where id = #{id,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.huaqi.bean.UserExample">
    delete from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.huaqi.bean.User">
    insert into users (id, password, userName, 
      age, gender, address, email, 
      tel, userType, majorExpenditure, 
      renovatedHouse, houseValue, agriculturalEquip, 
      vehicleValue, fixedAssets, agriHypothecaryValue, 
      deposit, aveIncome, monthIncome, 
      monthRatal, commerceHypothecaryValue, liabilities, 
      villageCadres, guarantee, elderLive, 
      honor, loanGuaratee, informationLevel, 
      personalInsurance, healthExamination, interestRate, 
      residenceTime, maritalStatus, married, 
      divorced, phoneNumReplace, fallIll, 
      educationBackground, mainStemDistance, treatmentCosts, 
      raisingNumber, childrenEdu, manpowerRate, 
      modernAgriTech, propertyInsurance, disasterNumber, 
      damageRate, loanUse, newsAttention, 
      educationAttention, onlineFrequency, broadbandBandwidth, 
      phoneCharge, weChat, arrearage, 
      badActions, layPayment, privateLending, 
      evaluateResult, paydebtAbilityScore, paydebtAbilityLevel, 
      paydebtPotentialScore, paydebtPotentialLevel, 
      paydebtSystemScore, paydebtSystemLevel)
    values (#{id,jdbcType=CHAR}, #{password,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{age,jdbcType=DOUBLE}, #{gender,jdbcType=CHAR}, #{address,jdbcType=DOUBLE}, #{email,jdbcType=VARCHAR}, 
      #{tel,jdbcType=CHAR}, #{userType,jdbcType=VARCHAR}, #{majorExpenditure,jdbcType=DOUBLE}, 
      #{renovatedHouse,jdbcType=DOUBLE}, #{houseValue,jdbcType=DOUBLE}, #{agriculturalEquip,jdbcType=DOUBLE}, 
      #{vehicleValue,jdbcType=DOUBLE}, #{fixedAssets,jdbcType=DOUBLE}, #{agriHypothecaryValue,jdbcType=DOUBLE}, 
      #{deposit,jdbcType=DOUBLE}, #{aveIncome,jdbcType=DOUBLE}, #{monthIncome,jdbcType=DOUBLE}, 
      #{monthRatal,jdbcType=DOUBLE}, #{commerceHypothecaryValue,jdbcType=DOUBLE}, #{liabilities,jdbcType=DOUBLE}, 
      #{villageCadres,jdbcType=DOUBLE}, #{guarantee,jdbcType=DOUBLE}, #{elderLive,jdbcType=DOUBLE}, 
      #{honor,jdbcType=DOUBLE}, #{loanGuaratee,jdbcType=DOUBLE}, #{informationLevel,jdbcType=DOUBLE}, 
      #{personalInsurance,jdbcType=DOUBLE}, #{healthExamination,jdbcType=DOUBLE}, #{interestRate,jdbcType=DOUBLE}, 
      #{residenceTime,jdbcType=DOUBLE}, #{maritalStatus,jdbcType=DOUBLE}, #{married,jdbcType=DOUBLE}, 
      #{divorced,jdbcType=DOUBLE}, #{phoneNumReplace,jdbcType=DOUBLE}, #{fallIll,jdbcType=DOUBLE}, 
      #{educationBackground,jdbcType=DOUBLE}, #{mainStemDistance,jdbcType=DOUBLE}, #{treatmentCosts,jdbcType=DOUBLE}, 
      #{raisingNumber,jdbcType=DOUBLE}, #{childrenEdu,jdbcType=DOUBLE}, #{manpowerRate,jdbcType=DOUBLE}, 
      #{modernAgriTech,jdbcType=DOUBLE}, #{propertyInsurance,jdbcType=DOUBLE}, #{disasterNumber,jdbcType=DOUBLE}, 
      #{damageRate,jdbcType=DOUBLE}, #{loanUse,jdbcType=DOUBLE}, #{newsAttention,jdbcType=DOUBLE}, 
      #{educationAttention,jdbcType=DOUBLE}, #{onlineFrequency,jdbcType=DOUBLE}, #{broadbandBandwidth,jdbcType=DOUBLE}, 
      #{phoneCharge,jdbcType=DOUBLE}, #{weChat,jdbcType=DOUBLE}, #{arrearage,jdbcType=DOUBLE}, 
      #{badActions,jdbcType=DOUBLE}, #{layPayment,jdbcType=DOUBLE}, #{privateLending,jdbcType=DOUBLE}, 
      #{evaluateResult,jdbcType=DOUBLE}, #{paydebtAbilityScore,jdbcType=DOUBLE}, #{paydebtAbilityLevel,jdbcType=VARCHAR}, 
      #{paydebtPotentialScore,jdbcType=DOUBLE}, #{paydebtPotentialLevel,jdbcType=VARCHAR}, 
      #{paydebtSystemScore,jdbcType=DOUBLE}, #{paydebtSystemLevel,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.huaqi.bean.User">
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="userName != null">
        userName,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="userType != null">
        userType,
      </if>
      <if test="majorExpenditure != null">
        majorExpenditure,
      </if>
      <if test="renovatedHouse != null">
        renovatedHouse,
      </if>
      <if test="houseValue != null">
        houseValue,
      </if>
      <if test="agriculturalEquip != null">
        agriculturalEquip,
      </if>
      <if test="vehicleValue != null">
        vehicleValue,
      </if>
      <if test="fixedAssets != null">
        fixedAssets,
      </if>
      <if test="agriHypothecaryValue != null">
        agriHypothecaryValue,
      </if>
      <if test="deposit != null">
        deposit,
      </if>
      <if test="aveIncome != null">
        aveIncome,
      </if>
      <if test="monthIncome != null">
        monthIncome,
      </if>
      <if test="monthRatal != null">
        monthRatal,
      </if>
      <if test="commerceHypothecaryValue != null">
        commerceHypothecaryValue,
      </if>
      <if test="liabilities != null">
        liabilities,
      </if>
      <if test="villageCadres != null">
        villageCadres,
      </if>
      <if test="guarantee != null">
        guarantee,
      </if>
      <if test="elderLive != null">
        elderLive,
      </if>
      <if test="honor != null">
        honor,
      </if>
      <if test="loanGuaratee != null">
        loanGuaratee,
      </if>
      <if test="informationLevel != null">
        informationLevel,
      </if>
      <if test="personalInsurance != null">
        personalInsurance,
      </if>
      <if test="healthExamination != null">
        healthExamination,
      </if>
      <if test="interestRate != null">
        interestRate,
      </if>
      <if test="residenceTime != null">
        residenceTime,
      </if>
      <if test="maritalStatus != null">
        maritalStatus,
      </if>
      <if test="married != null">
        married,
      </if>
      <if test="divorced != null">
        divorced,
      </if>
      <if test="phoneNumReplace != null">
        phoneNumReplace,
      </if>
      <if test="fallIll != null">
        fallIll,
      </if>
      <if test="educationBackground != null">
        educationBackground,
      </if>
      <if test="mainStemDistance != null">
        mainStemDistance,
      </if>
      <if test="treatmentCosts != null">
        treatmentCosts,
      </if>
      <if test="raisingNumber != null">
        raisingNumber,
      </if>
      <if test="childrenEdu != null">
        childrenEdu,
      </if>
      <if test="manpowerRate != null">
        manpowerRate,
      </if>
      <if test="modernAgriTech != null">
        modernAgriTech,
      </if>
      <if test="propertyInsurance != null">
        propertyInsurance,
      </if>
      <if test="disasterNumber != null">
        disasterNumber,
      </if>
      <if test="damageRate != null">
        damageRate,
      </if>
      <if test="loanUse != null">
        loanUse,
      </if>
      <if test="newsAttention != null">
        newsAttention,
      </if>
      <if test="educationAttention != null">
        educationAttention,
      </if>
      <if test="onlineFrequency != null">
        onlineFrequency,
      </if>
      <if test="broadbandBandwidth != null">
        broadbandBandwidth,
      </if>
      <if test="phoneCharge != null">
        phoneCharge,
      </if>
      <if test="weChat != null">
        weChat,
      </if>
      <if test="arrearage != null">
        arrearage,
      </if>
      <if test="badActions != null">
        badActions,
      </if>
      <if test="layPayment != null">
        layPayment,
      </if>
      <if test="privateLending != null">
        privateLending,
      </if>
      <if test="evaluateResult != null">
        evaluateResult,
      </if>
      <if test="paydebtAbilityScore != null">
        paydebtAbilityScore,
      </if>
      <if test="paydebtAbilityLevel != null">
        paydebtAbilityLevel,
      </if>
      <if test="paydebtPotentialScore != null">
        paydebtPotentialScore,
      </if>
      <if test="paydebtPotentialLevel != null">
        paydebtPotentialLevel,
      </if>
      <if test="paydebtSystemScore != null">
        paydebtSystemScore,
      </if>
      <if test="paydebtSystemLevel != null">
        paydebtSystemLevel,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=CHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=DOUBLE},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=CHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=DOUBLE},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=CHAR},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=VARCHAR},
      </if>
      <if test="majorExpenditure != null">
        #{majorExpenditure,jdbcType=DOUBLE},
      </if>
      <if test="renovatedHouse != null">
        #{renovatedHouse,jdbcType=DOUBLE},
      </if>
      <if test="houseValue != null">
        #{houseValue,jdbcType=DOUBLE},
      </if>
      <if test="agriculturalEquip != null">
        #{agriculturalEquip,jdbcType=DOUBLE},
      </if>
      <if test="vehicleValue != null">
        #{vehicleValue,jdbcType=DOUBLE},
      </if>
      <if test="fixedAssets != null">
        #{fixedAssets,jdbcType=DOUBLE},
      </if>
      <if test="agriHypothecaryValue != null">
        #{agriHypothecaryValue,jdbcType=DOUBLE},
      </if>
      <if test="deposit != null">
        #{deposit,jdbcType=DOUBLE},
      </if>
      <if test="aveIncome != null">
        #{aveIncome,jdbcType=DOUBLE},
      </if>
      <if test="monthIncome != null">
        #{monthIncome,jdbcType=DOUBLE},
      </if>
      <if test="monthRatal != null">
        #{monthRatal,jdbcType=DOUBLE},
      </if>
      <if test="commerceHypothecaryValue != null">
        #{commerceHypothecaryValue,jdbcType=DOUBLE},
      </if>
      <if test="liabilities != null">
        #{liabilities,jdbcType=DOUBLE},
      </if>
      <if test="villageCadres != null">
        #{villageCadres,jdbcType=DOUBLE},
      </if>
      <if test="guarantee != null">
        #{guarantee,jdbcType=DOUBLE},
      </if>
      <if test="elderLive != null">
        #{elderLive,jdbcType=DOUBLE},
      </if>
      <if test="honor != null">
        #{honor,jdbcType=DOUBLE},
      </if>
      <if test="loanGuaratee != null">
        #{loanGuaratee,jdbcType=DOUBLE},
      </if>
      <if test="informationLevel != null">
        #{informationLevel,jdbcType=DOUBLE},
      </if>
      <if test="personalInsurance != null">
        #{personalInsurance,jdbcType=DOUBLE},
      </if>
      <if test="healthExamination != null">
        #{healthExamination,jdbcType=DOUBLE},
      </if>
      <if test="interestRate != null">
        #{interestRate,jdbcType=DOUBLE},
      </if>
      <if test="residenceTime != null">
        #{residenceTime,jdbcType=DOUBLE},
      </if>
      <if test="maritalStatus != null">
        #{maritalStatus,jdbcType=DOUBLE},
      </if>
      <if test="married != null">
        #{married,jdbcType=DOUBLE},
      </if>
      <if test="divorced != null">
        #{divorced,jdbcType=DOUBLE},
      </if>
      <if test="phoneNumReplace != null">
        #{phoneNumReplace,jdbcType=DOUBLE},
      </if>
      <if test="fallIll != null">
        #{fallIll,jdbcType=DOUBLE},
      </if>
      <if test="educationBackground != null">
        #{educationBackground,jdbcType=DOUBLE},
      </if>
      <if test="mainStemDistance != null">
        #{mainStemDistance,jdbcType=DOUBLE},
      </if>
      <if test="treatmentCosts != null">
        #{treatmentCosts,jdbcType=DOUBLE},
      </if>
      <if test="raisingNumber != null">
        #{raisingNumber,jdbcType=DOUBLE},
      </if>
      <if test="childrenEdu != null">
        #{childrenEdu,jdbcType=DOUBLE},
      </if>
      <if test="manpowerRate != null">
        #{manpowerRate,jdbcType=DOUBLE},
      </if>
      <if test="modernAgriTech != null">
        #{modernAgriTech,jdbcType=DOUBLE},
      </if>
      <if test="propertyInsurance != null">
        #{propertyInsurance,jdbcType=DOUBLE},
      </if>
      <if test="disasterNumber != null">
        #{disasterNumber,jdbcType=DOUBLE},
      </if>
      <if test="damageRate != null">
        #{damageRate,jdbcType=DOUBLE},
      </if>
      <if test="loanUse != null">
        #{loanUse,jdbcType=DOUBLE},
      </if>
      <if test="newsAttention != null">
        #{newsAttention,jdbcType=DOUBLE},
      </if>
      <if test="educationAttention != null">
        #{educationAttention,jdbcType=DOUBLE},
      </if>
      <if test="onlineFrequency != null">
        #{onlineFrequency,jdbcType=DOUBLE},
      </if>
      <if test="broadbandBandwidth != null">
        #{broadbandBandwidth,jdbcType=DOUBLE},
      </if>
      <if test="phoneCharge != null">
        #{phoneCharge,jdbcType=DOUBLE},
      </if>
      <if test="weChat != null">
        #{weChat,jdbcType=DOUBLE},
      </if>
      <if test="arrearage != null">
        #{arrearage,jdbcType=DOUBLE},
      </if>
      <if test="badActions != null">
        #{badActions,jdbcType=DOUBLE},
      </if>
      <if test="layPayment != null">
        #{layPayment,jdbcType=DOUBLE},
      </if>
      <if test="privateLending != null">
        #{privateLending,jdbcType=DOUBLE},
      </if>
      <if test="evaluateResult != null">
        #{evaluateResult,jdbcType=DOUBLE},
      </if>
      <if test="paydebtAbilityScore != null">
        #{paydebtAbilityScore,jdbcType=DOUBLE},
      </if>
      <if test="paydebtAbilityLevel != null">
        #{paydebtAbilityLevel,jdbcType=VARCHAR},
      </if>
      <if test="paydebtPotentialScore != null">
        #{paydebtPotentialScore,jdbcType=DOUBLE},
      </if>
      <if test="paydebtPotentialLevel != null">
        #{paydebtPotentialLevel,jdbcType=VARCHAR},
      </if>
      <if test="paydebtSystemScore != null">
        #{paydebtSystemScore,jdbcType=DOUBLE},
      </if>
      <if test="paydebtSystemLevel != null">
        #{paydebtSystemLevel,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.huaqi.bean.UserExample" resultType="java.lang.Long">
    select count(*) from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update users
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=CHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        userName = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.age != null">
        age = #{record.age,jdbcType=DOUBLE},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=CHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=DOUBLE},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null">
        tel = #{record.tel,jdbcType=CHAR},
      </if>
      <if test="record.userType != null">
        userType = #{record.userType,jdbcType=VARCHAR},
      </if>
      <if test="record.majorExpenditure != null">
        majorExpenditure = #{record.majorExpenditure,jdbcType=DOUBLE},
      </if>
      <if test="record.renovatedHouse != null">
        renovatedHouse = #{record.renovatedHouse,jdbcType=DOUBLE},
      </if>
      <if test="record.houseValue != null">
        houseValue = #{record.houseValue,jdbcType=DOUBLE},
      </if>
      <if test="record.agriculturalEquip != null">
        agriculturalEquip = #{record.agriculturalEquip,jdbcType=DOUBLE},
      </if>
      <if test="record.vehicleValue != null">
        vehicleValue = #{record.vehicleValue,jdbcType=DOUBLE},
      </if>
      <if test="record.fixedAssets != null">
        fixedAssets = #{record.fixedAssets,jdbcType=DOUBLE},
      </if>
      <if test="record.agriHypothecaryValue != null">
        agriHypothecaryValue = #{record.agriHypothecaryValue,jdbcType=DOUBLE},
      </if>
      <if test="record.deposit != null">
        deposit = #{record.deposit,jdbcType=DOUBLE},
      </if>
      <if test="record.aveIncome != null">
        aveIncome = #{record.aveIncome,jdbcType=DOUBLE},
      </if>
      <if test="record.monthIncome != null">
        monthIncome = #{record.monthIncome,jdbcType=DOUBLE},
      </if>
      <if test="record.monthRatal != null">
        monthRatal = #{record.monthRatal,jdbcType=DOUBLE},
      </if>
      <if test="record.commerceHypothecaryValue != null">
        commerceHypothecaryValue = #{record.commerceHypothecaryValue,jdbcType=DOUBLE},
      </if>
      <if test="record.liabilities != null">
        liabilities = #{record.liabilities,jdbcType=DOUBLE},
      </if>
      <if test="record.villageCadres != null">
        villageCadres = #{record.villageCadres,jdbcType=DOUBLE},
      </if>
      <if test="record.guarantee != null">
        guarantee = #{record.guarantee,jdbcType=DOUBLE},
      </if>
      <if test="record.elderLive != null">
        elderLive = #{record.elderLive,jdbcType=DOUBLE},
      </if>
      <if test="record.honor != null">
        honor = #{record.honor,jdbcType=DOUBLE},
      </if>
      <if test="record.loanGuaratee != null">
        loanGuaratee = #{record.loanGuaratee,jdbcType=DOUBLE},
      </if>
      <if test="record.informationLevel != null">
        informationLevel = #{record.informationLevel,jdbcType=DOUBLE},
      </if>
      <if test="record.personalInsurance != null">
        personalInsurance = #{record.personalInsurance,jdbcType=DOUBLE},
      </if>
      <if test="record.healthExamination != null">
        healthExamination = #{record.healthExamination,jdbcType=DOUBLE},
      </if>
      <if test="record.interestRate != null">
        interestRate = #{record.interestRate,jdbcType=DOUBLE},
      </if>
      <if test="record.residenceTime != null">
        residenceTime = #{record.residenceTime,jdbcType=DOUBLE},
      </if>
      <if test="record.maritalStatus != null">
        maritalStatus = #{record.maritalStatus,jdbcType=DOUBLE},
      </if>
      <if test="record.married != null">
        married = #{record.married,jdbcType=DOUBLE},
      </if>
      <if test="record.divorced != null">
        divorced = #{record.divorced,jdbcType=DOUBLE},
      </if>
      <if test="record.phoneNumReplace != null">
        phoneNumReplace = #{record.phoneNumReplace,jdbcType=DOUBLE},
      </if>
      <if test="record.fallIll != null">
        fallIll = #{record.fallIll,jdbcType=DOUBLE},
      </if>
      <if test="record.educationBackground != null">
        educationBackground = #{record.educationBackground,jdbcType=DOUBLE},
      </if>
      <if test="record.mainStemDistance != null">
        mainStemDistance = #{record.mainStemDistance,jdbcType=DOUBLE},
      </if>
      <if test="record.treatmentCosts != null">
        treatmentCosts = #{record.treatmentCosts,jdbcType=DOUBLE},
      </if>
      <if test="record.raisingNumber != null">
        raisingNumber = #{record.raisingNumber,jdbcType=DOUBLE},
      </if>
      <if test="record.childrenEdu != null">
        childrenEdu = #{record.childrenEdu,jdbcType=DOUBLE},
      </if>
      <if test="record.manpowerRate != null">
        manpowerRate = #{record.manpowerRate,jdbcType=DOUBLE},
      </if>
      <if test="record.modernAgriTech != null">
        modernAgriTech = #{record.modernAgriTech,jdbcType=DOUBLE},
      </if>
      <if test="record.propertyInsurance != null">
        propertyInsurance = #{record.propertyInsurance,jdbcType=DOUBLE},
      </if>
      <if test="record.disasterNumber != null">
        disasterNumber = #{record.disasterNumber,jdbcType=DOUBLE},
      </if>
      <if test="record.damageRate != null">
        damageRate = #{record.damageRate,jdbcType=DOUBLE},
      </if>
      <if test="record.loanUse != null">
        loanUse = #{record.loanUse,jdbcType=DOUBLE},
      </if>
      <if test="record.newsAttention != null">
        newsAttention = #{record.newsAttention,jdbcType=DOUBLE},
      </if>
      <if test="record.educationAttention != null">
        educationAttention = #{record.educationAttention,jdbcType=DOUBLE},
      </if>
      <if test="record.onlineFrequency != null">
        onlineFrequency = #{record.onlineFrequency,jdbcType=DOUBLE},
      </if>
      <if test="record.broadbandBandwidth != null">
        broadbandBandwidth = #{record.broadbandBandwidth,jdbcType=DOUBLE},
      </if>
      <if test="record.phoneCharge != null">
        phoneCharge = #{record.phoneCharge,jdbcType=DOUBLE},
      </if>
      <if test="record.weChat != null">
        weChat = #{record.weChat,jdbcType=DOUBLE},
      </if>
      <if test="record.arrearage != null">
        arrearage = #{record.arrearage,jdbcType=DOUBLE},
      </if>
      <if test="record.badActions != null">
        badActions = #{record.badActions,jdbcType=DOUBLE},
      </if>
      <if test="record.layPayment != null">
        layPayment = #{record.layPayment,jdbcType=DOUBLE},
      </if>
      <if test="record.privateLending != null">
        privateLending = #{record.privateLending,jdbcType=DOUBLE},
      </if>
      <if test="record.evaluateResult != null">
        evaluateResult = #{record.evaluateResult,jdbcType=DOUBLE},
      </if>
      <if test="record.paydebtAbilityScore != null">
        paydebtAbilityScore = #{record.paydebtAbilityScore,jdbcType=DOUBLE},
      </if>
      <if test="record.paydebtAbilityLevel != null">
        paydebtAbilityLevel = #{record.paydebtAbilityLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.paydebtPotentialScore != null">
        paydebtPotentialScore = #{record.paydebtPotentialScore,jdbcType=DOUBLE},
      </if>
      <if test="record.paydebtPotentialLevel != null">
        paydebtPotentialLevel = #{record.paydebtPotentialLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.paydebtSystemScore != null">
        paydebtSystemScore = #{record.paydebtSystemScore,jdbcType=DOUBLE},
      </if>
      <if test="record.paydebtSystemLevel != null">
        paydebtSystemLevel = #{record.paydebtSystemLevel,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update users
    set id = #{record.id,jdbcType=CHAR},
      password = #{record.password,jdbcType=VARCHAR},
      userName = #{record.userName,jdbcType=VARCHAR},
      age = #{record.age,jdbcType=DOUBLE},
      gender = #{record.gender,jdbcType=CHAR},
      address = #{record.address,jdbcType=DOUBLE},
      email = #{record.email,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=CHAR},
      userType = #{record.userType,jdbcType=VARCHAR},
      majorExpenditure = #{record.majorExpenditure,jdbcType=DOUBLE},
      renovatedHouse = #{record.renovatedHouse,jdbcType=DOUBLE},
      houseValue = #{record.houseValue,jdbcType=DOUBLE},
      agriculturalEquip = #{record.agriculturalEquip,jdbcType=DOUBLE},
      vehicleValue = #{record.vehicleValue,jdbcType=DOUBLE},
      fixedAssets = #{record.fixedAssets,jdbcType=DOUBLE},
      agriHypothecaryValue = #{record.agriHypothecaryValue,jdbcType=DOUBLE},
      deposit = #{record.deposit,jdbcType=DOUBLE},
      aveIncome = #{record.aveIncome,jdbcType=DOUBLE},
      monthIncome = #{record.monthIncome,jdbcType=DOUBLE},
      monthRatal = #{record.monthRatal,jdbcType=DOUBLE},
      commerceHypothecaryValue = #{record.commerceHypothecaryValue,jdbcType=DOUBLE},
      liabilities = #{record.liabilities,jdbcType=DOUBLE},
      villageCadres = #{record.villageCadres,jdbcType=DOUBLE},
      guarantee = #{record.guarantee,jdbcType=DOUBLE},
      elderLive = #{record.elderLive,jdbcType=DOUBLE},
      honor = #{record.honor,jdbcType=DOUBLE},
      loanGuaratee = #{record.loanGuaratee,jdbcType=DOUBLE},
      informationLevel = #{record.informationLevel,jdbcType=DOUBLE},
      personalInsurance = #{record.personalInsurance,jdbcType=DOUBLE},
      healthExamination = #{record.healthExamination,jdbcType=DOUBLE},
      interestRate = #{record.interestRate,jdbcType=DOUBLE},
      residenceTime = #{record.residenceTime,jdbcType=DOUBLE},
      maritalStatus = #{record.maritalStatus,jdbcType=DOUBLE},
      married = #{record.married,jdbcType=DOUBLE},
      divorced = #{record.divorced,jdbcType=DOUBLE},
      phoneNumReplace = #{record.phoneNumReplace,jdbcType=DOUBLE},
      fallIll = #{record.fallIll,jdbcType=DOUBLE},
      educationBackground = #{record.educationBackground,jdbcType=DOUBLE},
      mainStemDistance = #{record.mainStemDistance,jdbcType=DOUBLE},
      treatmentCosts = #{record.treatmentCosts,jdbcType=DOUBLE},
      raisingNumber = #{record.raisingNumber,jdbcType=DOUBLE},
      childrenEdu = #{record.childrenEdu,jdbcType=DOUBLE},
      manpowerRate = #{record.manpowerRate,jdbcType=DOUBLE},
      modernAgriTech = #{record.modernAgriTech,jdbcType=DOUBLE},
      propertyInsurance = #{record.propertyInsurance,jdbcType=DOUBLE},
      disasterNumber = #{record.disasterNumber,jdbcType=DOUBLE},
      damageRate = #{record.damageRate,jdbcType=DOUBLE},
      loanUse = #{record.loanUse,jdbcType=DOUBLE},
      newsAttention = #{record.newsAttention,jdbcType=DOUBLE},
      educationAttention = #{record.educationAttention,jdbcType=DOUBLE},
      onlineFrequency = #{record.onlineFrequency,jdbcType=DOUBLE},
      broadbandBandwidth = #{record.broadbandBandwidth,jdbcType=DOUBLE},
      phoneCharge = #{record.phoneCharge,jdbcType=DOUBLE},
      weChat = #{record.weChat,jdbcType=DOUBLE},
      arrearage = #{record.arrearage,jdbcType=DOUBLE},
      badActions = #{record.badActions,jdbcType=DOUBLE},
      layPayment = #{record.layPayment,jdbcType=DOUBLE},
      privateLending = #{record.privateLending,jdbcType=DOUBLE},
      evaluateResult = #{record.evaluateResult,jdbcType=DOUBLE},
      paydebtAbilityScore = #{record.paydebtAbilityScore,jdbcType=DOUBLE},
      paydebtAbilityLevel = #{record.paydebtAbilityLevel,jdbcType=VARCHAR},
      paydebtPotentialScore = #{record.paydebtPotentialScore,jdbcType=DOUBLE},
      paydebtPotentialLevel = #{record.paydebtPotentialLevel,jdbcType=VARCHAR},
      paydebtSystemScore = #{record.paydebtSystemScore,jdbcType=DOUBLE},
      paydebtSystemLevel = #{record.paydebtSystemLevel,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.huaqi.bean.User">
    update users
    <set>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        userName = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=DOUBLE},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=DOUBLE},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=CHAR},
      </if>
      <if test="userType != null">
        userType = #{userType,jdbcType=VARCHAR},
      </if>
      <if test="majorExpenditure != null">
        majorExpenditure = #{majorExpenditure,jdbcType=DOUBLE},
      </if>
      <if test="renovatedHouse != null">
        renovatedHouse = #{renovatedHouse,jdbcType=DOUBLE},
      </if>
      <if test="houseValue != null">
        houseValue = #{houseValue,jdbcType=DOUBLE},
      </if>
      <if test="agriculturalEquip != null">
        agriculturalEquip = #{agriculturalEquip,jdbcType=DOUBLE},
      </if>
      <if test="vehicleValue != null">
        vehicleValue = #{vehicleValue,jdbcType=DOUBLE},
      </if>
      <if test="fixedAssets != null">
        fixedAssets = #{fixedAssets,jdbcType=DOUBLE},
      </if>
      <if test="agriHypothecaryValue != null">
        agriHypothecaryValue = #{agriHypothecaryValue,jdbcType=DOUBLE},
      </if>
      <if test="deposit != null">
        deposit = #{deposit,jdbcType=DOUBLE},
      </if>
      <if test="aveIncome != null">
        aveIncome = #{aveIncome,jdbcType=DOUBLE},
      </if>
      <if test="monthIncome != null">
        monthIncome = #{monthIncome,jdbcType=DOUBLE},
      </if>
      <if test="monthRatal != null">
        monthRatal = #{monthRatal,jdbcType=DOUBLE},
      </if>
      <if test="commerceHypothecaryValue != null">
        commerceHypothecaryValue = #{commerceHypothecaryValue,jdbcType=DOUBLE},
      </if>
      <if test="liabilities != null">
        liabilities = #{liabilities,jdbcType=DOUBLE},
      </if>
      <if test="villageCadres != null">
        villageCadres = #{villageCadres,jdbcType=DOUBLE},
      </if>
      <if test="guarantee != null">
        guarantee = #{guarantee,jdbcType=DOUBLE},
      </if>
      <if test="elderLive != null">
        elderLive = #{elderLive,jdbcType=DOUBLE},
      </if>
      <if test="honor != null">
        honor = #{honor,jdbcType=DOUBLE},
      </if>
      <if test="loanGuaratee != null">
        loanGuaratee = #{loanGuaratee,jdbcType=DOUBLE},
      </if>
      <if test="informationLevel != null">
        informationLevel = #{informationLevel,jdbcType=DOUBLE},
      </if>
      <if test="personalInsurance != null">
        personalInsurance = #{personalInsurance,jdbcType=DOUBLE},
      </if>
      <if test="healthExamination != null">
        healthExamination = #{healthExamination,jdbcType=DOUBLE},
      </if>
      <if test="interestRate != null">
        interestRate = #{interestRate,jdbcType=DOUBLE},
      </if>
      <if test="residenceTime != null">
        residenceTime = #{residenceTime,jdbcType=DOUBLE},
      </if>
      <if test="maritalStatus != null">
        maritalStatus = #{maritalStatus,jdbcType=DOUBLE},
      </if>
      <if test="married != null">
        married = #{married,jdbcType=DOUBLE},
      </if>
      <if test="divorced != null">
        divorced = #{divorced,jdbcType=DOUBLE},
      </if>
      <if test="phoneNumReplace != null">
        phoneNumReplace = #{phoneNumReplace,jdbcType=DOUBLE},
      </if>
      <if test="fallIll != null">
        fallIll = #{fallIll,jdbcType=DOUBLE},
      </if>
      <if test="educationBackground != null">
        educationBackground = #{educationBackground,jdbcType=DOUBLE},
      </if>
      <if test="mainStemDistance != null">
        mainStemDistance = #{mainStemDistance,jdbcType=DOUBLE},
      </if>
      <if test="treatmentCosts != null">
        treatmentCosts = #{treatmentCosts,jdbcType=DOUBLE},
      </if>
      <if test="raisingNumber != null">
        raisingNumber = #{raisingNumber,jdbcType=DOUBLE},
      </if>
      <if test="childrenEdu != null">
        childrenEdu = #{childrenEdu,jdbcType=DOUBLE},
      </if>
      <if test="manpowerRate != null">
        manpowerRate = #{manpowerRate,jdbcType=DOUBLE},
      </if>
      <if test="modernAgriTech != null">
        modernAgriTech = #{modernAgriTech,jdbcType=DOUBLE},
      </if>
      <if test="propertyInsurance != null">
        propertyInsurance = #{propertyInsurance,jdbcType=DOUBLE},
      </if>
      <if test="disasterNumber != null">
        disasterNumber = #{disasterNumber,jdbcType=DOUBLE},
      </if>
      <if test="damageRate != null">
        damageRate = #{damageRate,jdbcType=DOUBLE},
      </if>
      <if test="loanUse != null">
        loanUse = #{loanUse,jdbcType=DOUBLE},
      </if>
      <if test="newsAttention != null">
        newsAttention = #{newsAttention,jdbcType=DOUBLE},
      </if>
      <if test="educationAttention != null">
        educationAttention = #{educationAttention,jdbcType=DOUBLE},
      </if>
      <if test="onlineFrequency != null">
        onlineFrequency = #{onlineFrequency,jdbcType=DOUBLE},
      </if>
      <if test="broadbandBandwidth != null">
        broadbandBandwidth = #{broadbandBandwidth,jdbcType=DOUBLE},
      </if>
      <if test="phoneCharge != null">
        phoneCharge = #{phoneCharge,jdbcType=DOUBLE},
      </if>
      <if test="weChat != null">
        weChat = #{weChat,jdbcType=DOUBLE},
      </if>
      <if test="arrearage != null">
        arrearage = #{arrearage,jdbcType=DOUBLE},
      </if>
      <if test="badActions != null">
        badActions = #{badActions,jdbcType=DOUBLE},
      </if>
      <if test="layPayment != null">
        layPayment = #{layPayment,jdbcType=DOUBLE},
      </if>
      <if test="privateLending != null">
        privateLending = #{privateLending,jdbcType=DOUBLE},
      </if>
      <if test="evaluateResult != null">
        evaluateResult = #{evaluateResult,jdbcType=DOUBLE},
      </if>
      <if test="paydebtAbilityScore != null">
        paydebtAbilityScore = #{paydebtAbilityScore,jdbcType=DOUBLE},
      </if>
      <if test="paydebtAbilityLevel != null">
        paydebtAbilityLevel = #{paydebtAbilityLevel,jdbcType=VARCHAR},
      </if>
      <if test="paydebtPotentialScore != null">
        paydebtPotentialScore = #{paydebtPotentialScore,jdbcType=DOUBLE},
      </if>
      <if test="paydebtPotentialLevel != null">
        paydebtPotentialLevel = #{paydebtPotentialLevel,jdbcType=VARCHAR},
      </if>
      <if test="paydebtSystemScore != null">
        paydebtSystemScore = #{paydebtSystemScore,jdbcType=DOUBLE},
      </if>
      <if test="paydebtSystemLevel != null">
        paydebtSystemLevel = #{paydebtSystemLevel,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.huaqi.bean.User">
    update users
    set password = #{password,jdbcType=VARCHAR},
      userName = #{userName,jdbcType=VARCHAR},
      age = #{age,jdbcType=DOUBLE},
      gender = #{gender,jdbcType=CHAR},
      address = #{address,jdbcType=DOUBLE},
      email = #{email,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=CHAR},
      userType = #{userType,jdbcType=VARCHAR},
      majorExpenditure = #{majorExpenditure,jdbcType=DOUBLE},
      renovatedHouse = #{renovatedHouse,jdbcType=DOUBLE},
      houseValue = #{houseValue,jdbcType=DOUBLE},
      agriculturalEquip = #{agriculturalEquip,jdbcType=DOUBLE},
      vehicleValue = #{vehicleValue,jdbcType=DOUBLE},
      fixedAssets = #{fixedAssets,jdbcType=DOUBLE},
      agriHypothecaryValue = #{agriHypothecaryValue,jdbcType=DOUBLE},
      deposit = #{deposit,jdbcType=DOUBLE},
      aveIncome = #{aveIncome,jdbcType=DOUBLE},
      monthIncome = #{monthIncome,jdbcType=DOUBLE},
      monthRatal = #{monthRatal,jdbcType=DOUBLE},
      commerceHypothecaryValue = #{commerceHypothecaryValue,jdbcType=DOUBLE},
      liabilities = #{liabilities,jdbcType=DOUBLE},
      villageCadres = #{villageCadres,jdbcType=DOUBLE},
      guarantee = #{guarantee,jdbcType=DOUBLE},
      elderLive = #{elderLive,jdbcType=DOUBLE},
      honor = #{honor,jdbcType=DOUBLE},
      loanGuaratee = #{loanGuaratee,jdbcType=DOUBLE},
      informationLevel = #{informationLevel,jdbcType=DOUBLE},
      personalInsurance = #{personalInsurance,jdbcType=DOUBLE},
      healthExamination = #{healthExamination,jdbcType=DOUBLE},
      interestRate = #{interestRate,jdbcType=DOUBLE},
      residenceTime = #{residenceTime,jdbcType=DOUBLE},
      maritalStatus = #{maritalStatus,jdbcType=DOUBLE},
      married = #{married,jdbcType=DOUBLE},
      divorced = #{divorced,jdbcType=DOUBLE},
      phoneNumReplace = #{phoneNumReplace,jdbcType=DOUBLE},
      fallIll = #{fallIll,jdbcType=DOUBLE},
      educationBackground = #{educationBackground,jdbcType=DOUBLE},
      mainStemDistance = #{mainStemDistance,jdbcType=DOUBLE},
      treatmentCosts = #{treatmentCosts,jdbcType=DOUBLE},
      raisingNumber = #{raisingNumber,jdbcType=DOUBLE},
      childrenEdu = #{childrenEdu,jdbcType=DOUBLE},
      manpowerRate = #{manpowerRate,jdbcType=DOUBLE},
      modernAgriTech = #{modernAgriTech,jdbcType=DOUBLE},
      propertyInsurance = #{propertyInsurance,jdbcType=DOUBLE},
      disasterNumber = #{disasterNumber,jdbcType=DOUBLE},
      damageRate = #{damageRate,jdbcType=DOUBLE},
      loanUse = #{loanUse,jdbcType=DOUBLE},
      newsAttention = #{newsAttention,jdbcType=DOUBLE},
      educationAttention = #{educationAttention,jdbcType=DOUBLE},
      onlineFrequency = #{onlineFrequency,jdbcType=DOUBLE},
      broadbandBandwidth = #{broadbandBandwidth,jdbcType=DOUBLE},
      phoneCharge = #{phoneCharge,jdbcType=DOUBLE},
      weChat = #{weChat,jdbcType=DOUBLE},
      arrearage = #{arrearage,jdbcType=DOUBLE},
      badActions = #{badActions,jdbcType=DOUBLE},
      layPayment = #{layPayment,jdbcType=DOUBLE},
      privateLending = #{privateLending,jdbcType=DOUBLE},
      evaluateResult = #{evaluateResult,jdbcType=DOUBLE},
      paydebtAbilityScore = #{paydebtAbilityScore,jdbcType=DOUBLE},
      paydebtAbilityLevel = #{paydebtAbilityLevel,jdbcType=VARCHAR},
      paydebtPotentialScore = #{paydebtPotentialScore,jdbcType=DOUBLE},
      paydebtPotentialLevel = #{paydebtPotentialLevel,jdbcType=VARCHAR},
      paydebtSystemScore = #{paydebtSystemScore,jdbcType=DOUBLE},
      paydebtSystemLevel = #{paydebtSystemLevel,jdbcType=VARCHAR}
    where id = #{id,jdbcType=CHAR}
  </update>
</mapper>